#!/usr/bin/env bash

set -eu

cd $(dirname "${BASH_SOURCE[0]}")

: ${GOLANG_VERSION:=1.9.0}
export GOLANG_VERSION

export DOCKER_LFS_BUILD_VERSION=${DOCKER_LFS_BUILD_VERSION:-release-2.1}


if ! git diff --cached --exit-code >/dev/null 2>&1 || ! git diff --exit-code >/dev/null 2>&1; then
  echo "Git repo is not clean. Please make sure everything is checked in and commited"
  exit 2
fi
#This is the best test I could find for is git status clean

HEAD_NAME=$(git symbolic-ref -q HEAD) || HEAD_NAME=$(git rev-parse HEAD)
HEAD_NAME=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
if [ "$HEAD_NAME" == "HEAD" ]; then
  HEAD_NAME=$(git rev-parse HEAD)
fi

if [[ $# == 0 ]]; then
  IMAGE_NAMES=($(ls *.dockerfile))
else
  IMAGE_NAMES=("${@}")
fi

for IMAGE_NAME in "${IMAGE_NAMES[@]}"; do
  NAME=$(basename ${IMAGE_NAME%.*})
  echo "Tagging for ${NAME}"
  git checkout --detach ${HEAD_NAME}
  cp ${IMAGE_NAME} Dockerfile
  git add Dockerfile
  git commit -m "Auto generated branch for docker hub"
  git tag -f ${NAME}
done

git checkout ${HEAD_NAME}

echo "You probably want to 'git push origin --tags -f' now"
